version: '3.8'

services:
  app:
    build: .
    ports:
      - "${PORT:-3000}:${PORT:-3000}" # Mapea el puerto del host al puerto del contenedor, usando PORT de .env o 3000 por defecto
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # Evita que node_modules local sobreescriba el del contenedor
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - DB_HOST=db # El servicio de la base de datos se llamará 'db'
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET} # Asegúrate de tener esta variable en tu .env
    depends_on:
      - db
    command: npm run dev # Usa el script 'dev' para nodemon si estás en desarrollo

  db:
    image: postgres:13-alpine
    ports:
      - "${DB_PORT:-5432}:5432" # Mapea el puerto de la BD del host al del contenedor
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persiste los datos de la BD
      - ./src/db/microcrm.sql:/docker-entrypoint-initdb.d/init.sql # Script de inicialización

volumes:
  postgres_data: # Define el volumen para la persistencia de datos de PostgreSQL
